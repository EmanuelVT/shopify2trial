<!--dev-->
<script src="{{ 'vue.js' | asset_url }}"></script>
<!--Production-->
<!--<script src="{{ 'vue.min.js' | asset_url }}"></script>-->
<style>
    .product-highlight {
        background: black;
        padding: 100px 0;

    }

    .product-highlight__img {
        width: 100%;
        height: auto;
    }

    .product-highlight__title {
        color: white;
    }

    .product-highlight__info-container h2 {
        font-size: 2rem;
        color: white;
    }

    .product-highlight__paragraph {
        font-size: 1.2rem;
        line-height: 1.4;
        color: white;
    }

    .product-highlight__button {
        background: white;
        border: none;
        padding: 15px 40px;
    }
</style>

<div class="product-highlight">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                {%- if section.settings.image != blank -%}
                <img class="bg product-highlight__img"
                    srcset="{%- if section.settings.image.width >= 165 -%}{{ section.settings.image | img_url: '165x' }} 165w,{%- endif -%}
                              {%- if section.settings.image.width >= 360 -%}{{ section.settings.image | img_url: '360x' }} 360w,{%- endif -%}
                              {%- if section.settings.image.width >= 535 -%}{{ section.settings.image | img_url: '535x' }} 535w,{%- endif -%}
                              {%- if section.settings.image.width >= 750 -%}{{ section.settings.image | img_url: '750x' }} 750w,{%- endif -%}
                              {%- if section.settings.image.width >= 1070 -%}{{ section.settings.image | img_url: '1070x' }} 1070w,{%- endif -%}
                              {%- if section.settings.image.width >= 1500 -%}{{ section.settings.image | img_url: '2000x' }} 2000w,{%- endif -%}"
                    src="{{ section.settings.image | img_url: '1500x' }}"
                    sizes="(min-width: {{ settings.page_width }}px) 2000px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)"
                    alt="{{ section.settings.image.alt | escape }}" loading="lazy"
                    width="{{ section.settings.image.width }}" height="{{ section.settings.image.height }}">
                {%- else -%}

                {{ 'image' | placeholder_svg_tag: 'placeholder-style' }}



                {%- endif -%}
            </div>
            <div class="col-md-4">
                <div class="product-highlight__info-container">

                    {%- for block in section.blocks -%}
                    {% case block.type %}
                    {%- when 'heading' -%}
                    <h1 class="product-highlight__title" style="font-size:{{block.settings.font_size}}px;">
                        {{block.settings.title | escape}}
                    </h1>
                    <h2 class="image-with-text__heading h1 product-highlight__title" {{ block.shopify_attributes }}>
                        {{ block.settings.heading | escape }}
                    </h2>
                    {%- when 'paragraph' -%}
                    <p class="product-highlight__paragraph">{{block.settings.hero_text}}</p>
                    <div class="image-with-text__text rte" {{ block.shopify_attributes }}>{{ block.settings.text }}
                    </div>
                    {%- when 'button' -%}
                    {%- if block.settings.button_label != blank -%}
                    <button @click="addToCart" class="product-highlight__button">
                        {% assign button_title = block.settings.button_label | escape  %}
                        {% assign product_url = block.settings.button_link %}
                        ${title}</button>

                    {%- endif -%}
                    {%- endcase -%}
                    {%- endfor -%}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const productHighlight = Vue.createApp({
        delimiters: ['${', '}'],
        created() {
            fetch('{{product_url}}.js')
                .then(res => res.json())
                .then((data) => {
                    this.product_id = data.variants[0].id
                    console.log(this.product_id)
                })
        },
        methods: {
            addToCart() {
                fetch('/cart/add.js', {
                    body: JSON.stringify({
                        'id': this.product_id,
                        'quantity': 1
                    }),
                    credentials: 'same-origin',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-Width': 'xmlhttprequest'
                    },
                    method: 'POST'
                }).then(function (response) {
                    return response.json();
                }).then(function (json) {
                    console.log(json)
                }).catch(function (err) {
                    console.log(err)
                });

            }
        },
        data() {
            return {
                title: '{{button_title}}',
                product_id: ''
            }
        }
    }).mount('.product-highlight')
</script>


{% javascript %}
class HeroOne extends HTMLElement {
constructor() {
super();

const handleIntersection = (entries, observer) => {
if (!entries[0].isIntersecting) return;
observer.unobserve(this);

fetch(this.dataset.url)
.then(response => response.text())
.then(text => {
const html = document.createElement('div');
html.innerHTML = text;
const heroone = html.querySelector('hero-one');
if (heroone && heroone.innerHTML.trim().length) {
this.innerHTML = heroone.innerHTML;
}
})
.catch(e => {
console.error(e);
});
}

new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
}
}

customElements.define('hero-one', heroone);
{% endjavascript %}



{% schema %}
{
"name": "Product Highlight",
"class": "spaced-section spaced-section--full-width",
"settings": [
{
"type": "select",
"id": "hero_size",
"options": [
{
"value": "hero1__25vh",
"label": "25%"
},
{
"value": "hero1__50vh",
"label": "50%"
},
{
"value": "hero1__75vh",
"label": "75%"
},
{
"value": "hero1__100vh",
"label": "100%"
}
],
"default": "hero1__100vh",
"label": "Hero Size"
},
{
"type": "image_picker",
"id": "image",
"label": "t:sections.image-with-text.settings.image.label"
},
{
"type": "select",
"id": "hero_alignment",
"options": [
{
"value": "center",
"label": "Center"
},
{
"value": "left",
"label": "Left"
},
{
"value": "right",
"label": "Right"
}
],
"default": "center",
"label": "Alignment"
},
{
"type": "color",
"id": "background_color",
"label": "Background filter",
"default": "#000000"
},
{
"type": "range",
"id": "opacity",
"min": 0,
"max": 100,
"step": 1,
"label": "Opacity",
"default": 50
}
],
"blocks": [
{
"type": "heading",
"name": "t:sections.image-with-text.blocks.heading.name",
"limit": 1,
"settings": [
{
"type": "text",
"id": "title",
"label": "Title",
"default": "Title"
},
{
"type": "range",
"id": "font_size",
"min": 30,
"max": 95,
"step": 1,
"unit": "px",
"label": "Font size",
"default": 55
}
]
},
{
"type": "paragraph",
"name": "Paragraph",
"limit": 1,
"settings": [
{
"type": "textarea",
"id": "hero_text",
"label": "Hero Text",
"default": "Beard kickstarter affogato biodiesel jianbing. Tbh humblebrag truck cornhole."
}
]
},
{
"type": "button",
"name": "t:sections.image-with-text.blocks.button.name",
"limit": 1,
"settings": [
{
"type": "text",
"id": "button_label",
"default": "View More",
"label": "t:sections.image-with-text.blocks.button.settings.button_label.label",
"info": "t:sections.image-with-text.blocks.button.settings.button_label.info"
},
{
"type": "url",
"id": "button_link",
"label": "t:sections.image-with-text.blocks.button.settings.button_link.label"
}
]
}
],
"presets": [
{
"name": "Product Highlight",
"blocks": [
{
"type": "heading"
},
{
"type": "paragraph"
},
{
"type": "button"
}
]
}
]
}
{% endschema %}