{{ 'Hero1.css' | asset_url | stylesheet_tag }}

<div class="hero hero1 aligned-{{section.settings.hero_alignment}}" style="padding-bottom: 56.25%; height: 75vh;">

    {% if section.settings.video_url == blank %}

    <iframe allowfullscreen="" class="bg-video bg" frameborder="0" mozallowfullscreen="" style="background: black;"
        src="//player.vimeo.com/video/353546049?title=0&amp;portrait=0&amp;byline=0&amp;controls=0&amp;autoplay=1&loop=1&muted=1"
        webkitallowfullscreen=""></iframe>

    {% else %}

    {% assign video_link = section.settings.video_url %}
    {% assign video_size = section.settings.video_url | size  %}

    {% if video_size < 30 %}


    {% assign videoID = video_link | slice: 18, 9 %}


    <iframe allowfullscreen="" class="bg-video bg" frameborder="0" mozallowfullscreen=""
        style="background: {{section.settings.background_color}};"
        src="//player.vimeo.com/video/{{videoID}}?title=0&amp;portrait=0&amp;byline=0&amp;controls=0&amp;autoplay=1&loop=1&muted=1"
        webkitallowfullscreen=""></iframe>


    {% assign opacity = section.settings.opacity | divided_by: 100.00%}

    {% else %}

    {% assign video_link = section.settings.video_url %}
    {% assign videoID = video_link | slice: 32, 11 %}

    <iframe id="ytplayer" type="text/html" width="640" height="360" class="bg-video bg"
        src="https://www.youtube.com/embed/{{videoID}}?playlist={{videoID}}&loop=1&autoplay=1&mute=1&controls=0&enablejsapi=1"
        frameborder="0"></iframe>

    {% assign opacity = section.settings.opacity | divided_by: 100.00%}

    {% endif %}

    {% endif %}

    {% style %}

    .hero1__button{
    background: {{settings.button_bg}};
    color: {{settings.button_font_color}};
    border-color: {{settings.button_border_color}};
    }

    .hero1__button:hover {
    background: {{settings.button_bg_hover}};
    color: {{settings.button_font_color_hover}}
    }

    {% endstyle %}

    <div class="hero1__content-container"
        style="background: {{ section.settings.background_color | color_modify: 'alpha', opacity }}">
        <div class="hero1__info">

            {%- for block in section.blocks -%}
            {% case block.type %}
            {%- when 'heading' -%}
            <h1 class="hero1__title" style="font-size:{{block.settings.font_size}}px;">{{block.settings.title | escape}}
            </h1>
            <h2 class="image-with-text__heading h1" {{ block.shopify_attributes }}>
                {{ block.settings.heading | escape }}
            </h2>
            {%- when 'paragraph' -%}
            <p class="hero1__paragraph">{{block.settings.hero_text}}</p>
            <div class="image-with-text__text rte" {{ block.shopify_attributes }}>{{ block.settings.text }}</div>
            {%- when 'button' -%}
            {%- if block.settings.button_label != blank -%}
            <a href="{{block.settings.button_link}}" target="_blank" class="hero1__button"
                {% if block.settings.button_link == blank %} aria-disabled="true" {% endif %}
                {{ block.shopify_attributes }}>
                {{ block.settings.button_label | escape }}
            </a>
            {%- endif -%}
            {%- endcase -%}
            {%- endfor -%}


        </div>
    </div>


</div>


{% javascript %}
class HeroOne extends HTMLElement {
constructor() {
super();

const handleIntersection = (entries, observer) => {
if (!entries[0].isIntersecting) return;
observer.unobserve(this);

fetch(this.dataset.url)
.then(response => response.text())
.then(text => {
const html = document.createElement('div');
html.innerHTML = text;
const heroone = html.querySelector('hero-one');
if (heroone && heroone.innerHTML.trim().length) {
this.innerHTML = heroone.innerHTML;
}
})
.catch(e => {
console.error(e);
});
}

new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
}
}

customElements.define('hero-one', heroone);
{% endjavascript %}



{% schema %}
{
"name": "Hero Video",
"class": "spaced-section spaced-section--full-width",
"settings": [
{
"type": "video_url",
"id": "video_url",
"label": "Video Url",
"accept": [
"youtube",
"vimeo"
]
},
{
"type": "select",
"id": "hero_alignment",
"options": [
{
"value": "center",
"label": "Center"
},
{
"value": "left",
"label": "Left"
},
{
"value": "right",
"label": "Right"
}
],
"default": "center",
"label": "Alignment"
},
{
"type": "color",
"id": "background_color",
"label": "Background filter",
"default": "#000000"
},
{
"type": "range",
"id": "opacity",
"min": 0,
"max": 100,
"step": 1,
"label": "Opacity",
"default": 50
}
],
"blocks": [
{
"type": "heading",
"name": "t:sections.image-with-text.blocks.heading.name",
"limit": 1,
"settings": [
{
"type": "text",
"id": "title",
"label": "Title",
"default": "Title"
},
{
"type": "range",
"id": "font_size",
"min": 30,
"max": 95,
"step": 1,
"unit": "px",
"label": "Font size",
"default": 55
}
]
},
{
"type": "paragraph",
"name": "Paragraph",
"limit": 1,
"settings": [
{
"type": "textarea",
"id": "hero_text",
"label": "Hero Text",
"default": "Beard kickstarter affogato biodiesel jianbing. Tbh humblebrag truck cornhole."
}
]
},
{
"type": "button",
"name": "t:sections.image-with-text.blocks.button.name",
"limit": 1,
"settings": [
{
"type": "text",
"id": "button_label",
"default": "View More",
"label": "t:sections.image-with-text.blocks.button.settings.button_label.label",
"info": "t:sections.image-with-text.blocks.button.settings.button_label.info"
},
{
"type": "url",
"id": "button_link",
"label": "t:sections.image-with-text.blocks.button.settings.button_link.label"
}
]
}
],
"presets": [
{
"name": "Hero Video",
"blocks": [
{
"type": "heading"
},
{
"type": "paragraph"
},
{
"type": "button"
}
]
}
]
}
{% endschema %}